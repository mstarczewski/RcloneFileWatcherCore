name: Build & Release

on:
  push:
    tags:
      - 'v*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: ''
        required: false
        default: ''

jobs:
  build:
    runs-on: windows-latest
    env:
      Configuration: Release
      RuntimeId: win-x64

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore -c ${{ env.Configuration }}

      - name: Run tests
        shell: bash
        run: dotnet test RcloneFileWatcherCore.Tests/RcloneFileWatcherCore.Tests.csproj --no-build -c ${{ env.Configuration }}

      - name: Publish app
        run: dotnet publish RcloneFileWatcherCore/RcloneFileWatcherCore.csproj --no-build -c Release -r win-x64 --self-contained false /p:PublishSingleFile=true

      - name: Debug workspace layout
        run: |
          echo "Current working directory:"
          pwd
          echo "Workspace root contents:"
          ls -R "${{ github.workspace }}"

      - name: Prepare release artifacts
        run: |
          mkdir "${{ github.workspace }}\artifacts"
          copy "${{ github.workspace }}\RcloneFileWatcherCore\bin\Release\net8.0\win-x64\publish\*.exe" "${{ github.workspace }}\artifacts\"
          # copy "${{ github.workspace }}\RcloneFileWatcherCore\bin\Release\net8.0\win-x64\publish\version.json" "${{ github.workspace }}\artifacts\"
          Compress-Archive -Path "${{ github.workspace }}\artifacts\*" -DestinationPath "${{ github.workspace }}\artifacts\app.zip"

      - name: Detect tag
        id: detect_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -z "${{ github.event.inputs.tag }}" ]; then
            git fetch --tags
            tag=$(git tag --sort=-creatordate | head -n 1)
            echo "Auto-detected latest tag: $tag"
            echo "tag=$tag" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.detect_tag.outputs.tag }}
          files: |
            artifacts/*.exe
            artifacts/app.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
